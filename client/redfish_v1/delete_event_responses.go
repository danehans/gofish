package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteEventReader is a Reader for the DeleteEvent structure.
type DeleteEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteEventNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteEventUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteEventForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteEventNoContent creates a DeleteEventNoContent with default headers values
func NewDeleteEventNoContent() *DeleteEventNoContent {
	return &DeleteEventNoContent{}
}

/*DeleteEventNoContent handles this case with default header values.

Success
*/
type DeleteEventNoContent struct {
}

func (o *DeleteEventNoContent) Error() string {
	return fmt.Sprintf("[DELETE /EventService/Subscriptions/{index}][%d] deleteEventNoContent ", 204)
}

func (o *DeleteEventNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventUnauthorized creates a DeleteEventUnauthorized with default headers values
func NewDeleteEventUnauthorized() *DeleteEventUnauthorized {
	return &DeleteEventUnauthorized{}
}

/*DeleteEventUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type DeleteEventUnauthorized struct {
}

func (o *DeleteEventUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /EventService/Subscriptions/{index}][%d] deleteEventUnauthorized ", 401)
}

func (o *DeleteEventUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEventForbidden creates a DeleteEventForbidden with default headers values
func NewDeleteEventForbidden() *DeleteEventForbidden {
	return &DeleteEventForbidden{}
}

/*DeleteEventForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type DeleteEventForbidden struct {
}

func (o *DeleteEventForbidden) Error() string {
	return fmt.Sprintf("[DELETE /EventService/Subscriptions/{index}][%d] deleteEventForbidden ", 403)
}

func (o *DeleteEventForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
