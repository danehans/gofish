package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// GetAccountServiceReader is a Reader for the GetAccountService structure.
type GetAccountServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAccountServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAccountServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAccountServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAccountServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountServiceOK creates a GetAccountServiceOK with default headers values
func NewGetAccountServiceOK() *GetAccountServiceOK {
	return &GetAccountServiceOK{}
}

/*GetAccountServiceOK handles this case with default header values.

Success
*/
type GetAccountServiceOK struct {
	Payload *models.AccountService100AccountService
}

func (o *GetAccountServiceOK) Error() string {
	return fmt.Sprintf("[GET /AccountService][%d] getAccountServiceOK  %+v", 200, o.Payload)
}

func (o *GetAccountServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountService100AccountService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountServiceUnauthorized creates a GetAccountServiceUnauthorized with default headers values
func NewGetAccountServiceUnauthorized() *GetAccountServiceUnauthorized {
	return &GetAccountServiceUnauthorized{}
}

/*GetAccountServiceUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetAccountServiceUnauthorized struct {
}

func (o *GetAccountServiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /AccountService][%d] getAccountServiceUnauthorized ", 401)
}

func (o *GetAccountServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountServiceForbidden creates a GetAccountServiceForbidden with default headers values
func NewGetAccountServiceForbidden() *GetAccountServiceForbidden {
	return &GetAccountServiceForbidden{}
}

/*GetAccountServiceForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type GetAccountServiceForbidden struct {
}

func (o *GetAccountServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /AccountService][%d] getAccountServiceForbidden ", 403)
}

func (o *GetAccountServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountServiceInternalServerError creates a GetAccountServiceInternalServerError with default headers values
func NewGetAccountServiceInternalServerError() *GetAccountServiceInternalServerError {
	return &GetAccountServiceInternalServerError{}
}

/*GetAccountServiceInternalServerError handles this case with default header values.

Error
*/
type GetAccountServiceInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetAccountServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /AccountService][%d] getAccountServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAccountServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
