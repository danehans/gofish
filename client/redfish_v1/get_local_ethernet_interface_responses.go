package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// GetLocalEthernetInterfaceReader is a Reader for the GetLocalEthernetInterface structure.
type GetLocalEthernetInterfaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLocalEthernetInterfaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetLocalEthernetInterfaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetLocalEthernetInterfaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetLocalEthernetInterfaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetLocalEthernetInterfaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetLocalEthernetInterfaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetLocalEthernetInterfaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLocalEthernetInterfaceOK creates a GetLocalEthernetInterfaceOK with default headers values
func NewGetLocalEthernetInterfaceOK() *GetLocalEthernetInterfaceOK {
	return &GetLocalEthernetInterfaceOK{}
}

/*GetLocalEthernetInterfaceOK handles this case with default header values.

Success
*/
type GetLocalEthernetInterfaceOK struct {
	Payload *models.EthernetInterface100EthernetInterface
}

func (o *GetLocalEthernetInterfaceOK) Error() string {
	return fmt.Sprintf("[GET /Managers/CIMC/EthernetInterfaces/{index}][%d] getLocalEthernetInterfaceOK  %+v", 200, o.Payload)
}

func (o *GetLocalEthernetInterfaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EthernetInterface100EthernetInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalEthernetInterfaceBadRequest creates a GetLocalEthernetInterfaceBadRequest with default headers values
func NewGetLocalEthernetInterfaceBadRequest() *GetLocalEthernetInterfaceBadRequest {
	return &GetLocalEthernetInterfaceBadRequest{}
}

/*GetLocalEthernetInterfaceBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.

*/
type GetLocalEthernetInterfaceBadRequest struct {
}

func (o *GetLocalEthernetInterfaceBadRequest) Error() string {
	return fmt.Sprintf("[GET /Managers/CIMC/EthernetInterfaces/{index}][%d] getLocalEthernetInterfaceBadRequest ", 400)
}

func (o *GetLocalEthernetInterfaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLocalEthernetInterfaceUnauthorized creates a GetLocalEthernetInterfaceUnauthorized with default headers values
func NewGetLocalEthernetInterfaceUnauthorized() *GetLocalEthernetInterfaceUnauthorized {
	return &GetLocalEthernetInterfaceUnauthorized{}
}

/*GetLocalEthernetInterfaceUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetLocalEthernetInterfaceUnauthorized struct {
}

func (o *GetLocalEthernetInterfaceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Managers/CIMC/EthernetInterfaces/{index}][%d] getLocalEthernetInterfaceUnauthorized ", 401)
}

func (o *GetLocalEthernetInterfaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLocalEthernetInterfaceForbidden creates a GetLocalEthernetInterfaceForbidden with default headers values
func NewGetLocalEthernetInterfaceForbidden() *GetLocalEthernetInterfaceForbidden {
	return &GetLocalEthernetInterfaceForbidden{}
}

/*GetLocalEthernetInterfaceForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type GetLocalEthernetInterfaceForbidden struct {
}

func (o *GetLocalEthernetInterfaceForbidden) Error() string {
	return fmt.Sprintf("[GET /Managers/CIMC/EthernetInterfaces/{index}][%d] getLocalEthernetInterfaceForbidden ", 403)
}

func (o *GetLocalEthernetInterfaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLocalEthernetInterfaceNotFound creates a GetLocalEthernetInterfaceNotFound with default headers values
func NewGetLocalEthernetInterfaceNotFound() *GetLocalEthernetInterfaceNotFound {
	return &GetLocalEthernetInterfaceNotFound{}
}

/*GetLocalEthernetInterfaceNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type GetLocalEthernetInterfaceNotFound struct {
}

func (o *GetLocalEthernetInterfaceNotFound) Error() string {
	return fmt.Sprintf("[GET /Managers/CIMC/EthernetInterfaces/{index}][%d] getLocalEthernetInterfaceNotFound ", 404)
}

func (o *GetLocalEthernetInterfaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLocalEthernetInterfaceInternalServerError creates a GetLocalEthernetInterfaceInternalServerError with default headers values
func NewGetLocalEthernetInterfaceInternalServerError() *GetLocalEthernetInterfaceInternalServerError {
	return &GetLocalEthernetInterfaceInternalServerError{}
}

/*GetLocalEthernetInterfaceInternalServerError handles this case with default header values.

Error
*/
type GetLocalEthernetInterfaceInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetLocalEthernetInterfaceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Managers/CIMC/EthernetInterfaces/{index}][%d] getLocalEthernetInterfaceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLocalEthernetInterfaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
