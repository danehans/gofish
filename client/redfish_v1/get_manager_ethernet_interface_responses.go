package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// GetManagerEthernetInterfaceReader is a Reader for the GetManagerEthernetInterface structure.
type GetManagerEthernetInterfaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetManagerEthernetInterfaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetManagerEthernetInterfaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetManagerEthernetInterfaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetManagerEthernetInterfaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetManagerEthernetInterfaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetManagerEthernetInterfaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetManagerEthernetInterfaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetManagerEthernetInterfaceOK creates a GetManagerEthernetInterfaceOK with default headers values
func NewGetManagerEthernetInterfaceOK() *GetManagerEthernetInterfaceOK {
	return &GetManagerEthernetInterfaceOK{}
}

/*GetManagerEthernetInterfaceOK handles this case with default header values.

Success
*/
type GetManagerEthernetInterfaceOK struct {
	Payload *models.EthernetInterface100EthernetInterface
}

func (o *GetManagerEthernetInterfaceOK) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}/EthernetInterfaces/{index}][%d] getManagerEthernetInterfaceOK  %+v", 200, o.Payload)
}

func (o *GetManagerEthernetInterfaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EthernetInterface100EthernetInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManagerEthernetInterfaceBadRequest creates a GetManagerEthernetInterfaceBadRequest with default headers values
func NewGetManagerEthernetInterfaceBadRequest() *GetManagerEthernetInterfaceBadRequest {
	return &GetManagerEthernetInterfaceBadRequest{}
}

/*GetManagerEthernetInterfaceBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.

*/
type GetManagerEthernetInterfaceBadRequest struct {
}

func (o *GetManagerEthernetInterfaceBadRequest) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}/EthernetInterfaces/{index}][%d] getManagerEthernetInterfaceBadRequest ", 400)
}

func (o *GetManagerEthernetInterfaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagerEthernetInterfaceUnauthorized creates a GetManagerEthernetInterfaceUnauthorized with default headers values
func NewGetManagerEthernetInterfaceUnauthorized() *GetManagerEthernetInterfaceUnauthorized {
	return &GetManagerEthernetInterfaceUnauthorized{}
}

/*GetManagerEthernetInterfaceUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetManagerEthernetInterfaceUnauthorized struct {
}

func (o *GetManagerEthernetInterfaceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}/EthernetInterfaces/{index}][%d] getManagerEthernetInterfaceUnauthorized ", 401)
}

func (o *GetManagerEthernetInterfaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagerEthernetInterfaceForbidden creates a GetManagerEthernetInterfaceForbidden with default headers values
func NewGetManagerEthernetInterfaceForbidden() *GetManagerEthernetInterfaceForbidden {
	return &GetManagerEthernetInterfaceForbidden{}
}

/*GetManagerEthernetInterfaceForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type GetManagerEthernetInterfaceForbidden struct {
}

func (o *GetManagerEthernetInterfaceForbidden) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}/EthernetInterfaces/{index}][%d] getManagerEthernetInterfaceForbidden ", 403)
}

func (o *GetManagerEthernetInterfaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagerEthernetInterfaceNotFound creates a GetManagerEthernetInterfaceNotFound with default headers values
func NewGetManagerEthernetInterfaceNotFound() *GetManagerEthernetInterfaceNotFound {
	return &GetManagerEthernetInterfaceNotFound{}
}

/*GetManagerEthernetInterfaceNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type GetManagerEthernetInterfaceNotFound struct {
}

func (o *GetManagerEthernetInterfaceNotFound) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}/EthernetInterfaces/{index}][%d] getManagerEthernetInterfaceNotFound ", 404)
}

func (o *GetManagerEthernetInterfaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagerEthernetInterfaceInternalServerError creates a GetManagerEthernetInterfaceInternalServerError with default headers values
func NewGetManagerEthernetInterfaceInternalServerError() *GetManagerEthernetInterfaceInternalServerError {
	return &GetManagerEthernetInterfaceInternalServerError{}
}

/*GetManagerEthernetInterfaceInternalServerError handles this case with default header values.

Error
*/
type GetManagerEthernetInterfaceInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetManagerEthernetInterfaceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}/EthernetInterfaces/{index}][%d] getManagerEthernetInterfaceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetManagerEthernetInterfaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
