package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// GetRegistryFileContentsReader is a Reader for the GetRegistryFileContents structure.
type GetRegistryFileContentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegistryFileContentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRegistryFileContentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetRegistryFileContentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRegistryFileContentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetRegistryFileContentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRegistryFileContentsOK creates a GetRegistryFileContentsOK with default headers values
func NewGetRegistryFileContentsOK() *GetRegistryFileContentsOK {
	return &GetRegistryFileContentsOK{}
}

/*GetRegistryFileContentsOK handles this case with default header values.

Success
*/
type GetRegistryFileContentsOK struct {
	Payload *models.MessageRegistryFile100MessageRegistryFile
}

func (o *GetRegistryFileContentsOK) Error() string {
	return fmt.Sprintf("[GET /Registries/en/{identifier}][%d] getRegistryFileContentsOK  %+v", 200, o.Payload)
}

func (o *GetRegistryFileContentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageRegistryFile100MessageRegistryFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryFileContentsUnauthorized creates a GetRegistryFileContentsUnauthorized with default headers values
func NewGetRegistryFileContentsUnauthorized() *GetRegistryFileContentsUnauthorized {
	return &GetRegistryFileContentsUnauthorized{}
}

/*GetRegistryFileContentsUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetRegistryFileContentsUnauthorized struct {
}

func (o *GetRegistryFileContentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Registries/en/{identifier}][%d] getRegistryFileContentsUnauthorized ", 401)
}

func (o *GetRegistryFileContentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryFileContentsForbidden creates a GetRegistryFileContentsForbidden with default headers values
func NewGetRegistryFileContentsForbidden() *GetRegistryFileContentsForbidden {
	return &GetRegistryFileContentsForbidden{}
}

/*GetRegistryFileContentsForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type GetRegistryFileContentsForbidden struct {
}

func (o *GetRegistryFileContentsForbidden) Error() string {
	return fmt.Sprintf("[GET /Registries/en/{identifier}][%d] getRegistryFileContentsForbidden ", 403)
}

func (o *GetRegistryFileContentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryFileContentsInternalServerError creates a GetRegistryFileContentsInternalServerError with default headers values
func NewGetRegistryFileContentsInternalServerError() *GetRegistryFileContentsInternalServerError {
	return &GetRegistryFileContentsInternalServerError{}
}

/*GetRegistryFileContentsInternalServerError handles this case with default header values.

Error
*/
type GetRegistryFileContentsInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetRegistryFileContentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Registries/en/{identifier}][%d] getRegistryFileContentsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRegistryFileContentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
