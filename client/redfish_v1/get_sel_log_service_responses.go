package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// GetSelLogServiceReader is a Reader for the GetSelLogService structure.
type GetSelLogServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSelLogServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSelLogServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSelLogServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSelLogServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSelLogServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSelLogServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSelLogServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSelLogServiceOK creates a GetSelLogServiceOK with default headers values
func NewGetSelLogServiceOK() *GetSelLogServiceOK {
	return &GetSelLogServiceOK{}
}

/*GetSelLogServiceOK handles this case with default header values.

Success
*/
type GetSelLogServiceOK struct {
	Payload *models.LogService100LogService
}

func (o *GetSelLogServiceOK) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/LogServices/sel][%d] getSelLogServiceOK  %+v", 200, o.Payload)
}

func (o *GetSelLogServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogService100LogService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSelLogServiceBadRequest creates a GetSelLogServiceBadRequest with default headers values
func NewGetSelLogServiceBadRequest() *GetSelLogServiceBadRequest {
	return &GetSelLogServiceBadRequest{}
}

/*GetSelLogServiceBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.

*/
type GetSelLogServiceBadRequest struct {
}

func (o *GetSelLogServiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/LogServices/sel][%d] getSelLogServiceBadRequest ", 400)
}

func (o *GetSelLogServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSelLogServiceUnauthorized creates a GetSelLogServiceUnauthorized with default headers values
func NewGetSelLogServiceUnauthorized() *GetSelLogServiceUnauthorized {
	return &GetSelLogServiceUnauthorized{}
}

/*GetSelLogServiceUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetSelLogServiceUnauthorized struct {
}

func (o *GetSelLogServiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/LogServices/sel][%d] getSelLogServiceUnauthorized ", 401)
}

func (o *GetSelLogServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSelLogServiceForbidden creates a GetSelLogServiceForbidden with default headers values
func NewGetSelLogServiceForbidden() *GetSelLogServiceForbidden {
	return &GetSelLogServiceForbidden{}
}

/*GetSelLogServiceForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type GetSelLogServiceForbidden struct {
}

func (o *GetSelLogServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/LogServices/sel][%d] getSelLogServiceForbidden ", 403)
}

func (o *GetSelLogServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSelLogServiceNotFound creates a GetSelLogServiceNotFound with default headers values
func NewGetSelLogServiceNotFound() *GetSelLogServiceNotFound {
	return &GetSelLogServiceNotFound{}
}

/*GetSelLogServiceNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type GetSelLogServiceNotFound struct {
}

func (o *GetSelLogServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/LogServices/sel][%d] getSelLogServiceNotFound ", 404)
}

func (o *GetSelLogServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSelLogServiceInternalServerError creates a GetSelLogServiceInternalServerError with default headers values
func NewGetSelLogServiceInternalServerError() *GetSelLogServiceInternalServerError {
	return &GetSelLogServiceInternalServerError{}
}

/*GetSelLogServiceInternalServerError handles this case with default header values.

Error
*/
type GetSelLogServiceInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetSelLogServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/LogServices/sel][%d] getSelLogServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSelLogServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
