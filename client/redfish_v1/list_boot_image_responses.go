package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// ListBootImageReader is a Reader for the ListBootImage structure.
type ListBootImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBootImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListBootImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListBootImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListBootImageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListBootImageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListBootImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListBootImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListBootImageOK creates a ListBootImageOK with default headers values
func NewListBootImageOK() *ListBootImageOK {
	return &ListBootImageOK{}
}

/*ListBootImageOK handles this case with default header values.

Success
*/
type ListBootImageOK struct {
	Payload *models.CIMCBootImageBootImageList
}

func (o *ListBootImageOK) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/CIMC.BootImage][%d] listBootImageOK  %+v", 200, o.Payload)
}

func (o *ListBootImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CIMCBootImageBootImageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBootImageBadRequest creates a ListBootImageBadRequest with default headers values
func NewListBootImageBadRequest() *ListBootImageBadRequest {
	return &ListBootImageBadRequest{}
}

/*ListBootImageBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.

*/
type ListBootImageBadRequest struct {
}

func (o *ListBootImageBadRequest) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/CIMC.BootImage][%d] listBootImageBadRequest ", 400)
}

func (o *ListBootImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBootImageUnauthorized creates a ListBootImageUnauthorized with default headers values
func NewListBootImageUnauthorized() *ListBootImageUnauthorized {
	return &ListBootImageUnauthorized{}
}

/*ListBootImageUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type ListBootImageUnauthorized struct {
}

func (o *ListBootImageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/CIMC.BootImage][%d] listBootImageUnauthorized ", 401)
}

func (o *ListBootImageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBootImageForbidden creates a ListBootImageForbidden with default headers values
func NewListBootImageForbidden() *ListBootImageForbidden {
	return &ListBootImageForbidden{}
}

/*ListBootImageForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type ListBootImageForbidden struct {
}

func (o *ListBootImageForbidden) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/CIMC.BootImage][%d] listBootImageForbidden ", 403)
}

func (o *ListBootImageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBootImageNotFound creates a ListBootImageNotFound with default headers values
func NewListBootImageNotFound() *ListBootImageNotFound {
	return &ListBootImageNotFound{}
}

/*ListBootImageNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type ListBootImageNotFound struct {
}

func (o *ListBootImageNotFound) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/CIMC.BootImage][%d] listBootImageNotFound ", 404)
}

func (o *ListBootImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBootImageInternalServerError creates a ListBootImageInternalServerError with default headers values
func NewListBootImageInternalServerError() *ListBootImageInternalServerError {
	return &ListBootImageInternalServerError{}
}

/*ListBootImageInternalServerError handles this case with default header values.

Error
*/
type ListBootImageInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ListBootImageInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/CIMC.BootImage][%d] listBootImageInternalServerError  %+v", 500, o.Payload)
}

func (o *ListBootImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
