package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// ListResetTypesReader is a Reader for the ListResetTypes structure.
type ListResetTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListResetTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListResetTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListResetTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListResetTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListResetTypesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListResetTypesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListResetTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListResetTypesOK creates a ListResetTypesOK with default headers values
func NewListResetTypesOK() *ListResetTypesOK {
	return &ListResetTypesOK{}
}

/*ListResetTypesOK handles this case with default header values.

Success
*/
type ListResetTypesOK struct {
	Payload *models.CIMCResetActionResetAction
}

func (o *ListResetTypesOK) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/ComputerSystem.Reset][%d] listResetTypesOK  %+v", 200, o.Payload)
}

func (o *ListResetTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CIMCResetActionResetAction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListResetTypesBadRequest creates a ListResetTypesBadRequest with default headers values
func NewListResetTypesBadRequest() *ListResetTypesBadRequest {
	return &ListResetTypesBadRequest{}
}

/*ListResetTypesBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.

*/
type ListResetTypesBadRequest struct {
}

func (o *ListResetTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/ComputerSystem.Reset][%d] listResetTypesBadRequest ", 400)
}

func (o *ListResetTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListResetTypesUnauthorized creates a ListResetTypesUnauthorized with default headers values
func NewListResetTypesUnauthorized() *ListResetTypesUnauthorized {
	return &ListResetTypesUnauthorized{}
}

/*ListResetTypesUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type ListResetTypesUnauthorized struct {
}

func (o *ListResetTypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/ComputerSystem.Reset][%d] listResetTypesUnauthorized ", 401)
}

func (o *ListResetTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListResetTypesForbidden creates a ListResetTypesForbidden with default headers values
func NewListResetTypesForbidden() *ListResetTypesForbidden {
	return &ListResetTypesForbidden{}
}

/*ListResetTypesForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type ListResetTypesForbidden struct {
}

func (o *ListResetTypesForbidden) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/ComputerSystem.Reset][%d] listResetTypesForbidden ", 403)
}

func (o *ListResetTypesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListResetTypesNotFound creates a ListResetTypesNotFound with default headers values
func NewListResetTypesNotFound() *ListResetTypesNotFound {
	return &ListResetTypesNotFound{}
}

/*ListResetTypesNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type ListResetTypesNotFound struct {
}

func (o *ListResetTypesNotFound) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/ComputerSystem.Reset][%d] listResetTypesNotFound ", 404)
}

func (o *ListResetTypesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListResetTypesInternalServerError creates a ListResetTypesInternalServerError with default headers values
func NewListResetTypesInternalServerError() *ListResetTypesInternalServerError {
	return &ListResetTypesInternalServerError{}
}

/*ListResetTypesInternalServerError handles this case with default header values.

Error
*/
type ListResetTypesInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ListResetTypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/Actions/ComputerSystem.Reset][%d] listResetTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListResetTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
