package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// ListRolesReader is a Reader for the ListRoles structure.
type ListRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListRolesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRolesOK creates a ListRolesOK with default headers values
func NewListRolesOK() *ListRolesOK {
	return &ListRolesOK{}
}

/*ListRolesOK handles this case with default header values.

Success
*/
type ListRolesOK struct {
	Payload *models.RoleCollectionRoleCollection
}

func (o *ListRolesOK) Error() string {
	return fmt.Sprintf("[GET /AccountService/Roles][%d] listRolesOK  %+v", 200, o.Payload)
}

func (o *ListRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleCollectionRoleCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRolesBadRequest creates a ListRolesBadRequest with default headers values
func NewListRolesBadRequest() *ListRolesBadRequest {
	return &ListRolesBadRequest{}
}

/*ListRolesBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.

*/
type ListRolesBadRequest struct {
}

func (o *ListRolesBadRequest) Error() string {
	return fmt.Sprintf("[GET /AccountService/Roles][%d] listRolesBadRequest ", 400)
}

func (o *ListRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRolesUnauthorized creates a ListRolesUnauthorized with default headers values
func NewListRolesUnauthorized() *ListRolesUnauthorized {
	return &ListRolesUnauthorized{}
}

/*ListRolesUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type ListRolesUnauthorized struct {
}

func (o *ListRolesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /AccountService/Roles][%d] listRolesUnauthorized ", 401)
}

func (o *ListRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRolesForbidden creates a ListRolesForbidden with default headers values
func NewListRolesForbidden() *ListRolesForbidden {
	return &ListRolesForbidden{}
}

/*ListRolesForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type ListRolesForbidden struct {
}

func (o *ListRolesForbidden) Error() string {
	return fmt.Sprintf("[GET /AccountService/Roles][%d] listRolesForbidden ", 403)
}

func (o *ListRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRolesNotFound creates a ListRolesNotFound with default headers values
func NewListRolesNotFound() *ListRolesNotFound {
	return &ListRolesNotFound{}
}

/*ListRolesNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type ListRolesNotFound struct {
}

func (o *ListRolesNotFound) Error() string {
	return fmt.Sprintf("[GET /AccountService/Roles][%d] listRolesNotFound ", 404)
}

func (o *ListRolesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRolesInternalServerError creates a ListRolesInternalServerError with default headers values
func NewListRolesInternalServerError() *ListRolesInternalServerError {
	return &ListRolesInternalServerError{}
}

/*ListRolesInternalServerError handles this case with default header values.

Error
*/
type ListRolesInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ListRolesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /AccountService/Roles][%d] listRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
