package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// ListSchemasReader is a Reader for the ListSchemas structure.
type ListSchemasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSchemasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListSchemasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListSchemasUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListSchemasForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListSchemasInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListSchemasOK creates a ListSchemasOK with default headers values
func NewListSchemasOK() *ListSchemasOK {
	return &ListSchemasOK{}
}

/*ListSchemasOK handles this case with default header values.

Success
*/
type ListSchemasOK struct {
	Payload *models.JSONSchemaFileCollectionJSONSchemaFileCollection
}

func (o *ListSchemasOK) Error() string {
	return fmt.Sprintf("[GET /Schemas][%d] listSchemasOK  %+v", 200, o.Payload)
}

func (o *ListSchemasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JSONSchemaFileCollectionJSONSchemaFileCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSchemasUnauthorized creates a ListSchemasUnauthorized with default headers values
func NewListSchemasUnauthorized() *ListSchemasUnauthorized {
	return &ListSchemasUnauthorized{}
}

/*ListSchemasUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type ListSchemasUnauthorized struct {
}

func (o *ListSchemasUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Schemas][%d] listSchemasUnauthorized ", 401)
}

func (o *ListSchemasUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSchemasForbidden creates a ListSchemasForbidden with default headers values
func NewListSchemasForbidden() *ListSchemasForbidden {
	return &ListSchemasForbidden{}
}

/*ListSchemasForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not possess authorization to perform this request.

*/
type ListSchemasForbidden struct {
}

func (o *ListSchemasForbidden) Error() string {
	return fmt.Sprintf("[GET /Schemas][%d] listSchemasForbidden ", 403)
}

func (o *ListSchemasForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSchemasInternalServerError creates a ListSchemasInternalServerError with default headers values
func NewListSchemasInternalServerError() *ListSchemasInternalServerError {
	return &ListSchemasInternalServerError{}
}

/*ListSchemasInternalServerError handles this case with default header values.

Error
*/
type ListSchemasInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ListSchemasInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Schemas][%d] listSchemasInternalServerError  %+v", 500, o.Payload)
}

func (o *ListSchemasInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
