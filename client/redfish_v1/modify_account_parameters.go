package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/danehans/gofish/models"
)

// NewModifyAccountParams creates a new ModifyAccountParams object
// with the default values initialized.
func NewModifyAccountParams() *ModifyAccountParams {
	var ()
	return &ModifyAccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewModifyAccountParamsWithTimeout creates a new ModifyAccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewModifyAccountParamsWithTimeout(timeout time.Duration) *ModifyAccountParams {
	var ()
	return &ModifyAccountParams{

		timeout: timeout,
	}
}

// NewModifyAccountParamsWithContext creates a new ModifyAccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewModifyAccountParamsWithContext(ctx context.Context) *ModifyAccountParams {
	var ()
	return &ModifyAccountParams{

		Context: ctx,
	}
}

/*ModifyAccountParams contains all the parameters to send to the API endpoint
for the modify account operation typically these are written to a http.Request
*/
type ModifyAccountParams struct {

	/*Name*/
	Name string
	/*Payload*/
	Payload *models.ManagerAccount100ManagerAccount

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the modify account params
func (o *ModifyAccountParams) WithTimeout(timeout time.Duration) *ModifyAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the modify account params
func (o *ModifyAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the modify account params
func (o *ModifyAccountParams) WithContext(ctx context.Context) *ModifyAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the modify account params
func (o *ModifyAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithName adds the name to the modify account params
func (o *ModifyAccountParams) WithName(name string) *ModifyAccountParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the modify account params
func (o *ModifyAccountParams) SetName(name string) {
	o.Name = name
}

// WithPayload adds the payload to the modify account params
func (o *ModifyAccountParams) WithPayload(payload *models.ManagerAccount100ManagerAccount) *ModifyAccountParams {
	o.SetPayload(payload)
	return o
}

// SetPayload adds the payload to the modify account params
func (o *ModifyAccountParams) SetPayload(payload *models.ManagerAccount100ManagerAccount) {
	o.Payload = payload
}

// WriteToRequest writes these params to a swagger request
func (o *ModifyAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.Payload == nil {
		o.Payload = new(models.ManagerAccount100ManagerAccount)
	}

	if err := r.SetBodyParam(o.Payload); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
