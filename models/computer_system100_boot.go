package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ComputerSystem100Boot This object contains the boot information for the current resource.
// swagger:model ComputerSystem.1.0.0_Boot
type ComputerSystem100Boot struct {

	// Describes the state of the Boot Source Override feature
	BootSourceOverrideEnabled string `json:"BootSourceOverrideEnabled,omitempty"`

	// The current boot source to be used at next boot instead of the normal boot device, if BootSourceOverrideEnabled is true.
	BootSourceOverrideTarget string `json:"BootSourceOverrideTarget,omitempty"`

	// This property is the Uefi Device Path of the device to boot from when BootSourceOverrideSupported is UefiTarget.
	UefiTargetBootSourceOverride string `json:"UefiTargetBootSourceOverride,omitempty"`
}

// Validate validates this computer system 1 0 0 boot
func (m *ComputerSystem100Boot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBootSourceOverrideEnabled(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBootSourceOverrideTarget(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var computerSystem100BootTypeBootSourceOverrideEnabledPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Disabled","Once","Continuous"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		computerSystem100BootTypeBootSourceOverrideEnabledPropEnum = append(computerSystem100BootTypeBootSourceOverrideEnabledPropEnum, v)
	}
}

const (
	// ComputerSystem100BootBootSourceOverrideEnabledDisabled captures enum value "Disabled"
	ComputerSystem100BootBootSourceOverrideEnabledDisabled string = "Disabled"
	// ComputerSystem100BootBootSourceOverrideEnabledOnce captures enum value "Once"
	ComputerSystem100BootBootSourceOverrideEnabledOnce string = "Once"
	// ComputerSystem100BootBootSourceOverrideEnabledContinuous captures enum value "Continuous"
	ComputerSystem100BootBootSourceOverrideEnabledContinuous string = "Continuous"
)

// prop value enum
func (m *ComputerSystem100Boot) validateBootSourceOverrideEnabledEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, computerSystem100BootTypeBootSourceOverrideEnabledPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComputerSystem100Boot) validateBootSourceOverrideEnabled(formats strfmt.Registry) error {

	if swag.IsZero(m.BootSourceOverrideEnabled) { // not required
		return nil
	}

	// value enum
	if err := m.validateBootSourceOverrideEnabledEnum("BootSourceOverrideEnabled", "body", m.BootSourceOverrideEnabled); err != nil {
		return err
	}

	return nil
}

var computerSystem100BootTypeBootSourceOverrideTargetPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["None","Pxe","Floppy","Cd","Usb","Hdd","BiosSetup","Utilities","Diags","UefiShell","UefiTarget"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		computerSystem100BootTypeBootSourceOverrideTargetPropEnum = append(computerSystem100BootTypeBootSourceOverrideTargetPropEnum, v)
	}
}

const (
	// ComputerSystem100BootBootSourceOverrideTargetNone captures enum value "None"
	ComputerSystem100BootBootSourceOverrideTargetNone string = "None"
	// ComputerSystem100BootBootSourceOverrideTargetPxe captures enum value "Pxe"
	ComputerSystem100BootBootSourceOverrideTargetPxe string = "Pxe"
	// ComputerSystem100BootBootSourceOverrideTargetFloppy captures enum value "Floppy"
	ComputerSystem100BootBootSourceOverrideTargetFloppy string = "Floppy"
	// ComputerSystem100BootBootSourceOverrideTargetCd captures enum value "Cd"
	ComputerSystem100BootBootSourceOverrideTargetCd string = "Cd"
	// ComputerSystem100BootBootSourceOverrideTargetUsb captures enum value "Usb"
	ComputerSystem100BootBootSourceOverrideTargetUsb string = "Usb"
	// ComputerSystem100BootBootSourceOverrideTargetHdd captures enum value "Hdd"
	ComputerSystem100BootBootSourceOverrideTargetHdd string = "Hdd"
	// ComputerSystem100BootBootSourceOverrideTargetBiosSetup captures enum value "BiosSetup"
	ComputerSystem100BootBootSourceOverrideTargetBiosSetup string = "BiosSetup"
	// ComputerSystem100BootBootSourceOverrideTargetUtilities captures enum value "Utilities"
	ComputerSystem100BootBootSourceOverrideTargetUtilities string = "Utilities"
	// ComputerSystem100BootBootSourceOverrideTargetDiags captures enum value "Diags"
	ComputerSystem100BootBootSourceOverrideTargetDiags string = "Diags"
	// ComputerSystem100BootBootSourceOverrideTargetUefiShell captures enum value "UefiShell"
	ComputerSystem100BootBootSourceOverrideTargetUefiShell string = "UefiShell"
	// ComputerSystem100BootBootSourceOverrideTargetUefiTarget captures enum value "UefiTarget"
	ComputerSystem100BootBootSourceOverrideTargetUefiTarget string = "UefiTarget"
)

// prop value enum
func (m *ComputerSystem100Boot) validateBootSourceOverrideTargetEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, computerSystem100BootTypeBootSourceOverrideTargetPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComputerSystem100Boot) validateBootSourceOverrideTarget(formats strfmt.Registry) error {

	if swag.IsZero(m.BootSourceOverrideTarget) { // not required
		return nil
	}

	// value enum
	if err := m.validateBootSourceOverrideTargetEnum("BootSourceOverrideTarget", "body", m.BootSourceOverrideTarget); err != nil {
		return err
	}

	return nil
}
