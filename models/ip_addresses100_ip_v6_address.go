package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// IPAddresses100IPV6Address IP addresses 1 0 0 ipv6 address
// swagger:model IPAddresses.1.0.0_IPv6Address
type IPAddresses100IPV6Address struct {

	// This is the IPv6 Address.
	Address string `json:"Address,omitempty"`

	// This indicates how the address was determined.
	// Read Only: true
	AddressOrigin string `json:"AddressOrigin,omitempty"`

	// The current state of this address as defined in RFC 4862.
	// Read Only: true
	AddressState string `json:"AddressState,omitempty"`

	// oem
	Oem ResourceOem `json:"Oem,omitempty"`

	// This is the IPv6 Address Prefix Length.
	// Read Only: true
	// Maximum: 128
	// Minimum: 1
	PrefixLength float64 `json:"PrefixLength,omitempty"`
}

// Validate validates this IP addresses 1 0 0 ipv6 address
func (m *IPAddresses100IPV6Address) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddressOrigin(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateAddressState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePrefixLength(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ipAddresses100Ipv6AddressTypeAddressOriginPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Static","DHCPv6","LinkLocal","SLAAC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ipAddresses100Ipv6AddressTypeAddressOriginPropEnum = append(ipAddresses100Ipv6AddressTypeAddressOriginPropEnum, v)
	}
}

const (
	// IPAddresses100IPV6AddressAddressOriginStatic captures enum value "Static"
	IPAddresses100IPV6AddressAddressOriginStatic string = "Static"
	// IPAddresses100IPV6AddressAddressOriginDHCPv6 captures enum value "DHCPv6"
	IPAddresses100IPV6AddressAddressOriginDHCPv6 string = "DHCPv6"
	// IPAddresses100IPV6AddressAddressOriginLinkLocal captures enum value "LinkLocal"
	IPAddresses100IPV6AddressAddressOriginLinkLocal string = "LinkLocal"
	// IPAddresses100IPV6AddressAddressOriginSLAAC captures enum value "SLAAC"
	IPAddresses100IPV6AddressAddressOriginSLAAC string = "SLAAC"
)

// prop value enum
func (m *IPAddresses100IPV6Address) validateAddressOriginEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, ipAddresses100Ipv6AddressTypeAddressOriginPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *IPAddresses100IPV6Address) validateAddressOrigin(formats strfmt.Registry) error {

	if swag.IsZero(m.AddressOrigin) { // not required
		return nil
	}

	// value enum
	if err := m.validateAddressOriginEnum("AddressOrigin", "body", m.AddressOrigin); err != nil {
		return err
	}

	return nil
}

var ipAddresses100Ipv6AddressTypeAddressStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Preferred","Deprecated","Tentative","Failed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ipAddresses100Ipv6AddressTypeAddressStatePropEnum = append(ipAddresses100Ipv6AddressTypeAddressStatePropEnum, v)
	}
}

const (
	// IPAddresses100IPV6AddressAddressStatePreferred captures enum value "Preferred"
	IPAddresses100IPV6AddressAddressStatePreferred string = "Preferred"
	// IPAddresses100IPV6AddressAddressStateDeprecated captures enum value "Deprecated"
	IPAddresses100IPV6AddressAddressStateDeprecated string = "Deprecated"
	// IPAddresses100IPV6AddressAddressStateTentative captures enum value "Tentative"
	IPAddresses100IPV6AddressAddressStateTentative string = "Tentative"
	// IPAddresses100IPV6AddressAddressStateFailed captures enum value "Failed"
	IPAddresses100IPV6AddressAddressStateFailed string = "Failed"
)

// prop value enum
func (m *IPAddresses100IPV6Address) validateAddressStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, ipAddresses100Ipv6AddressTypeAddressStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *IPAddresses100IPV6Address) validateAddressState(formats strfmt.Registry) error {

	if swag.IsZero(m.AddressState) { // not required
		return nil
	}

	// value enum
	if err := m.validateAddressStateEnum("AddressState", "body", m.AddressState); err != nil {
		return err
	}

	return nil
}

func (m *IPAddresses100IPV6Address) validatePrefixLength(formats strfmt.Registry) error {

	if swag.IsZero(m.PrefixLength) { // not required
		return nil
	}

	if err := validate.Minimum("PrefixLength", "body", float64(m.PrefixLength), 1, false); err != nil {
		return err
	}

	if err := validate.Maximum("PrefixLength", "body", float64(m.PrefixLength), 128, false); err != nil {
		return err
	}

	return nil
}
