package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// IPAddresses100IPV6StaticAddress This object represents a single IPv6 static address to be assigned on a network interface.
// swagger:model IPAddresses.1.0.0_IPv6StaticAddress
type IPAddresses100IPV6StaticAddress struct {

	// A valid IPv6 address.
	// Required: true
	Address *string `json:"Address"`

	// oem
	Oem ResourceOem `json:"Oem,omitempty"`

	// The Prefix Length of this IPv6 address.
	// Required: true
	// Read Only: true
	// Maximum: 128
	// Minimum: 1
	PrefixLength float64 `json:"PrefixLength"`
}

// Validate validates this IP addresses 1 0 0 ipv6 static address
func (m *IPAddresses100IPV6StaticAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePrefixLength(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IPAddresses100IPV6StaticAddress) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("Address", "body", m.Address); err != nil {
		return err
	}

	return nil
}

func (m *IPAddresses100IPV6StaticAddress) validatePrefixLength(formats strfmt.Registry) error {

	if err := validate.Required("PrefixLength", "body", float64(m.PrefixLength)); err != nil {
		return err
	}

	if err := validate.Minimum("PrefixLength", "body", float64(m.PrefixLength), 1, false); err != nil {
		return err
	}

	if err := validate.Maximum("PrefixLength", "body", float64(m.PrefixLength), 128, false); err != nil {
		return err
	}

	return nil
}
