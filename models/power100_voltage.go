package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Power100Voltage This is the base type for addressable members of an array.
// swagger:model Power.1.0.0_Voltage
type Power100Voltage struct {

	// Below normal range but not yet fatal.
	// Read Only: true
	LowerThresholdCritical float64 `json:"LowerThresholdCritical,omitempty"`

	// Below normal range and is fatal
	// Read Only: true
	LowerThresholdFatal float64 `json:"LowerThresholdFatal,omitempty"`

	// Below normal range
	// Read Only: true
	LowerThresholdNonCritical float64 `json:"LowerThresholdNonCritical,omitempty"`

	// Maximum value for CurrentReading
	// Read Only: true
	MaxReadingRange float64 `json:"MaxReadingRange,omitempty"`

	// This is the identifier for the member within the collection.
	MemberID string `json:"MemberId,omitempty"`

	// Minimum value for CurrentReading
	// Read Only: true
	MinReadingRange float64 `json:"MinReadingRange,omitempty"`

	// Voltage sensor name.
	// Read Only: true
	Name string `json:"Name,omitempty"`

	// This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.
	Oem ResourceOem `json:"Oem,omitempty"`

	// Describes the area or device to which this voltage measurement applies.
	// Read Only: true
	PhysicalContext string `json:"PhysicalContext,omitempty"`

	// The current value of the voltage sensor.
	// Read Only: true
	ReadingVolts float64 `json:"ReadingVolts,omitempty"`

	// Describes the areas or devices to which this voltage measurement applies.
	// Read Only: true
	RelatedItem []*Odata400IDRef `json:"RelatedItem"`

	// related item at odata count
	// Read Only: true
	RelatedItemAtOdataCount float64 `json:"RelatedItem@odata.count,omitempty"`

	// related item at odata navigation link
	RelatedItemAtOdataNavigationLink *Odata400IDRef `json:"RelatedItem@odata.navigationLink,omitempty"`

	// A numerical identifier to represent the voltage sensor
	// Read Only: true
	SensorNumber float64 `json:"SensorNumber,omitempty"`

	// status
	Status *ResourceStatus `json:"Status,omitempty"`

	// Above normal range but not yet fatal.
	// Read Only: true
	UpperThresholdCritical float64 `json:"UpperThresholdCritical,omitempty"`

	// Above normal range and is fatal
	// Read Only: true
	UpperThresholdFatal float64 `json:"UpperThresholdFatal,omitempty"`

	// Above normal range
	// Read Only: true
	UpperThresholdNonCritical float64 `json:"UpperThresholdNonCritical,omitempty"`
}

// Validate validates this power 1 0 0 voltage
func (m *Power100Voltage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePhysicalContext(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRelatedItem(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRelatedItemAtOdataNavigationLink(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var power100VoltageTypePhysicalContextPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Room","Intake","Exhaust","Front","Back","Upper","Lower","CPU","GPU","Backplane","SystemBoard","PowerSupply","VoltageRegulator","StorageDevice","NetworkingDevice","ComputeBay","StorageBay","NetworkBay","ExpansionBay","PowerSupplyBay"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		power100VoltageTypePhysicalContextPropEnum = append(power100VoltageTypePhysicalContextPropEnum, v)
	}
}

const (
	// Power100VoltagePhysicalContextRoom captures enum value "Room"
	Power100VoltagePhysicalContextRoom string = "Room"
	// Power100VoltagePhysicalContextIntake captures enum value "Intake"
	Power100VoltagePhysicalContextIntake string = "Intake"
	// Power100VoltagePhysicalContextExhaust captures enum value "Exhaust"
	Power100VoltagePhysicalContextExhaust string = "Exhaust"
	// Power100VoltagePhysicalContextFront captures enum value "Front"
	Power100VoltagePhysicalContextFront string = "Front"
	// Power100VoltagePhysicalContextBack captures enum value "Back"
	Power100VoltagePhysicalContextBack string = "Back"
	// Power100VoltagePhysicalContextUpper captures enum value "Upper"
	Power100VoltagePhysicalContextUpper string = "Upper"
	// Power100VoltagePhysicalContextLower captures enum value "Lower"
	Power100VoltagePhysicalContextLower string = "Lower"
	// Power100VoltagePhysicalContextCPU captures enum value "CPU"
	Power100VoltagePhysicalContextCPU string = "CPU"
	// Power100VoltagePhysicalContextGPU captures enum value "GPU"
	Power100VoltagePhysicalContextGPU string = "GPU"
	// Power100VoltagePhysicalContextBackplane captures enum value "Backplane"
	Power100VoltagePhysicalContextBackplane string = "Backplane"
	// Power100VoltagePhysicalContextSystemBoard captures enum value "SystemBoard"
	Power100VoltagePhysicalContextSystemBoard string = "SystemBoard"
	// Power100VoltagePhysicalContextPowerSupply captures enum value "PowerSupply"
	Power100VoltagePhysicalContextPowerSupply string = "PowerSupply"
	// Power100VoltagePhysicalContextVoltageRegulator captures enum value "VoltageRegulator"
	Power100VoltagePhysicalContextVoltageRegulator string = "VoltageRegulator"
	// Power100VoltagePhysicalContextStorageDevice captures enum value "StorageDevice"
	Power100VoltagePhysicalContextStorageDevice string = "StorageDevice"
	// Power100VoltagePhysicalContextNetworkingDevice captures enum value "NetworkingDevice"
	Power100VoltagePhysicalContextNetworkingDevice string = "NetworkingDevice"
	// Power100VoltagePhysicalContextComputeBay captures enum value "ComputeBay"
	Power100VoltagePhysicalContextComputeBay string = "ComputeBay"
	// Power100VoltagePhysicalContextStorageBay captures enum value "StorageBay"
	Power100VoltagePhysicalContextStorageBay string = "StorageBay"
	// Power100VoltagePhysicalContextNetworkBay captures enum value "NetworkBay"
	Power100VoltagePhysicalContextNetworkBay string = "NetworkBay"
	// Power100VoltagePhysicalContextExpansionBay captures enum value "ExpansionBay"
	Power100VoltagePhysicalContextExpansionBay string = "ExpansionBay"
	// Power100VoltagePhysicalContextPowerSupplyBay captures enum value "PowerSupplyBay"
	Power100VoltagePhysicalContextPowerSupplyBay string = "PowerSupplyBay"
)

// prop value enum
func (m *Power100Voltage) validatePhysicalContextEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, power100VoltageTypePhysicalContextPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Power100Voltage) validatePhysicalContext(formats strfmt.Registry) error {

	if swag.IsZero(m.PhysicalContext) { // not required
		return nil
	}

	// value enum
	if err := m.validatePhysicalContextEnum("PhysicalContext", "body", m.PhysicalContext); err != nil {
		return err
	}

	return nil
}

func (m *Power100Voltage) validateRelatedItem(formats strfmt.Registry) error {

	if swag.IsZero(m.RelatedItem) { // not required
		return nil
	}

	for i := 0; i < len(m.RelatedItem); i++ {

		if swag.IsZero(m.RelatedItem[i]) { // not required
			continue
		}

		if m.RelatedItem[i] != nil {

			if err := m.RelatedItem[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *Power100Voltage) validateRelatedItemAtOdataNavigationLink(formats strfmt.Registry) error {

	if swag.IsZero(m.RelatedItemAtOdataNavigationLink) { // not required
		return nil
	}

	if m.RelatedItemAtOdataNavigationLink != nil {

		if err := m.RelatedItemAtOdataNavigationLink.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *Power100Voltage) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if m.Status != nil {

		if err := m.Status.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
